<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name       "minio">
<!ENTITY author     "frozenpine1">
<!ENTITY version    "2017.09.14i">
<!ENTITY category   "Network Services">
<!ENTITY pluginURL  "https://raw.github.com/frozenpine1/unRAID-plugins/master/&name;.plg">
<!ENTITY packageURL "https://dl.minio.io/server/minio/release/linux-amd64/&name;">
]>

<PLUGIN  name="&name;"
    author="&author;"
    version="&version;"
    category="&category;"
    pluginURL="&pluginURL;">
    
<!--
Copyright 2017, Frozen Pine (frozenpine)

This Plugin adds Minio Cloud Storage to unRAID v6.

Plugin file locations:
 /boot/config/plugins/minio.plg      		       # this file
 /boot/config/plugins/minio/minio                      # service file
 /boot/config/plugins/minio/read_me.txt                # Help File
 /etc/rc.d/rc.minio                                    # plugin control script
 /usr/local/emhttp/plugins/minio/minio.page	       # page file for webGui menu system
 /usr/local/emhttp/plugins/minio/minio.png             # plugin icon file
 /usr/local/emhttp/plugins/minio/device_status.png     # plugin webgui image file
 /usr/local/emhttp/plugins/minio/new_config.png        # plugin webgui image file
 /usr/local/emhttp/plugins/minio/information.png       # plugin webgui image file
 /var/run/minio/minio.pid                              # run-time pid file

-->

<FILE Name="/boot/config/plugins/&name;/&name;.cfg">
<INLINE>
SERVICE="enable"
COMMAND="service"
ADDRESS=""
PORT="9000"
ACCESSKEY=""
SECRETKEY=""
USERLIST="-1"
</INLINE>
</FILE>

<FILE Run="/bin/bash" Method="install">
<INLINE>
if [ -d /usr/local/emhttp/plugins/&name; ]; then
  rm -r /usr/local/emhttp/plugins/&name;
fi;
if [ -f /etc/rc.d/rc.&name; ]; then
  rm -f /etc/rc.d/rc.&name;
fi;
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
rm -r /usr/local/emhttp/plugins/&name;
rm -f /etc/rc.d/rc.&name;
rm -rf /boot/config/plugins/&name;
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/&name;.png" Type="base64">
<INLINE>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/device_status.png" Type="base64">
<INLINE>
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAN1wAADdcBQiibeAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFJSURBVDiNtZI9awJBEIafVctUSv6KvUUCEpPiDhsFsT2CVcSt5OqzlWBvKzb5QDCCvX8lYL2zsm4alTtRMYRM987OPLzzssp7z1+qcKo5m81u8/n8s1KqDuC9nzjnXqvV6vdVAOecds69pFoxcAN0TwKm0+kSWG+326Rer69EpA2glLrbOfgC2kB3MpmUc7mcBophGFZyACKiRYTNZqN3uiQiBEGwCIJgISKISAnAWquNMYiIPjhoNBorINzbMsZkbKZ1s9kM028FgNFo9AE8AJ9RFNVEJANI6+PZAkAURbVzC8f6eLYAMBgMyt57DRS11pVLgCRJlsBaKZX0er3VIURrLcaYfYiZpbQ2xmhrbTbEfr+fCeaSgziOM4Grf/nKnU7nJHU4HKqrACIy997fp3tKqfmp2bMntFqtN+BxJ9/H4/HTrwDX1g/Ee8aNyc3z/wAAAABJRU5ErkJggg==
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/new_config.png" Type="base64">
<INLINE>
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAN1wAADdcBQiibeAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAHcSURBVDiNpdKxa5NhEAbwX4uDUEFEpzo6FNShIohD0SVQwQyVDEJ0MEMxoNiohYIFhUqQYizRLNEPWxyMoGaRKiLBRUUd/AMqOAhVBF1Epd/hUId+FZF0EA9eXu7uuXuf97nrWV5e9j+2bq1Ep9PpQz8+5XK5b51OZwiXcC+Xy11bxfV0YzA/P38Cl/E1u6/jDb5jfz6f/9GVQbvdTrAXO1HD+UKhsNRut3MYwMlCofAjw1ZR+82g1WptwnNsx91isXh4tXGr1dqKRTzDKYzgAnb1zM7O9uIIzmAQd3EII6VS6RHMzc314T02/0H4YqlUOr8uIrbiCrbgeLlcvtFsNs/hfrPZfImx7Fub8Rp3sFAulx//FrFerw8iwb5KpbJUr9fXYyl76QOGMuozlUpl8U/duk4BpqenZ3A6cxcwNDEx8eVvXG/XakTE2Yi4HREiYiAiHk5NTfX9jevKYHJysh83cQy3MJylniBfrVZ/rtlgfHx8g5VxDeKVlZE9wJ4M0sLRWq22TJdVjohmVgy7sREHrezIAIr4jEpXDdI03ZGmqexcbTQabxuNxpc0TYfTNP2YxcdGR0e3dW0QEcci4kVEPI2IqdV4kiTvI+JARCxGxIUkSd6tKeK/2C+l7dZWE4J7LwAAAABJRU5ErkJggg==
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/information.png" Type="base64">
<INLINE>
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAKcSURBVDjLpZPLa9RXHMU/d0ysZEwmMQqZiTaP0agoaKGJUiwIxU0hUjtUQaIuXHSVbRVc+R8ICj5WvrCldJquhVqalIbOohuZxjDVxDSP0RgzyST9zdzvvffrQkh8tBs9yy9fPhw45xhV5X1U8+Yhc3U0LcEdVxdOVq20OA0ooQjhpnfhzuDZTx6++m9edfDFlZGMtXKxI6HJnrZGGtauAWAhcgwVnnB/enkGo/25859l3wIcvpzP2EhuHNpWF9/dWs/UnKW4EOGDkqhbQyqxjsKzMgM/P1ymhlO5C4ezK4DeS/c7RdzQoa3x1PaWenJjJZwT9rQ1gSp/js1jYoZdyfX8M1/mp7uFaTR8mrt29FEMQILr62jQ1I5kA8OF59jIItVA78dJertTiBNs1ZKfLNG+MUHX1oaURtIHEAOw3p/Y197MWHEJEUGCxwfHj8MTZIcnsGKxzrIURYzPLnJgbxvG2hMrKdjItjbV11CYKeG8R7ygIdB3sBMFhkem0RAAQ3Fuka7UZtRHrasOqhYNilOwrkrwnhCU/ON5/q04vHV48ThxOCuoAbxnBQB+am65QnO8FqMxNCjBe14mpHhxBBGCWBLxD3iyWMaYMLUKsO7WYH6Stk1xCAGccmR/Ozs/bKJuXS39R/YgIjgROloSDA39Deit1SZWotsjD8pfp5ONqZ6uTfyWn+T7X0f59t5fqDhUA4ry0fYtjJcWeZQvTBu4/VqRuk9/l9Fy5cbnX+6Od26s58HjWWaflwkusKGxjm1bmhkvLXHvh1+WMbWncgPfZN+qcvex6xnUXkzvSiYP7EvTvH4toDxdqDD4+ygT+cKMMbH+3MCZ7H9uAaDnqytpVX8cDScJlRY0YIwpAjcNcuePgXP/P6Z30QuoP4J7WbYhuQAAAABJRU5ErkJggg==
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/README.md">
<INLINE>
**&name; Plugin**

This Plugin adds Minio Cloud Storage to unRAID v6.
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/&name;.page">
<INLINE>
Menu="NetworkServices"
Title="Minio"
Icon="&name;.png"
---
<![CDATA[

<?PHP
$minio_cfg = parse_ini_file( "/boot/config/plugins/minio/minio.cfg");
$minio_running = file_exists( "/var/run/minio.pid") ? "yes" : "no";

//Get local plugin file version
$minio_localplg = shell_exec('grep "<\!ENTITY version" /boot/config/plugins/minio.plg | cut -d\" -f2');

//Get remote plugin file version.  Uses Limetech plugin php to perform this function
$minio_remoteplg = shell_exec("/usr/local/sbin/plugin check minio.plg");

//create array of users from passwd file where their UID is greater than or equal to 1000.  ie. assumed to be non-system users
$useropts = array();
$command = "awk -F':' '{ if($3 >= 1000) print $1 }' /etc/passwd";
exec($command, $useropts);

//create array of users from cfg file. explode handles comma separated in case of multi values
$selectedminiousers  = explode(',', $minio_cfg['USERLIST']);
      
//get version of Minio.  Note: ssh reports version to stderr, so redirect stderr (2) to stdout (1)
$minioversion = shell_exec("/usr/bin/minio version 2>&1");

?>

<html>
<head></head>
<body>

<div style="width: 49%; float:left; border: 0px solid black;">
  <div id="title">
    <span class="left">Status:&nbsp;<img src='/plugins/minio/device_status.png'>
      <?if ($minio_running=="yes"):?>
        <span class="green"><b>Minio is RUNNING</b></span>
      <?else:?>
        <span class="red"><b>Minio is NOT RUNNING</b></span>
      <?endif;?>
    </span>
  </div>
  
  <div style="border: 0px solid black;">
    <span class="left">
      <p>
        Minio Storage Server Version: <span class="green-text"><b><?=$minioversion?></b></span>   
      </p>
	</span>
  </div>

  <br></br>
  
  <div style="border: 0px solid black;">
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td>Plugin</td>
        <td>Local Version</td>
        <td>Online Version</td>
      </tr>
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>Minio Plugin</td>
        <td>
          <span class="green-text"><?=$minio_localplg?></span>
        </td>
        <td>
          <span class="green-text"><?=$minio_remoteplg?></span>
        </td>
      </tr>
    </table>
  </div>

  <br></br>

  <div>
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Control Actions</td>
      </tr>

      <?if ($minio_running=="yes"):?>
        <tr>
        <td width="30%">
          <form name="minio_start_stop" method="POST" action="/update.htm" target="progressFrame">
            <input type="hidden" name="cmd" value="/etc/rc.d/rc.minio stop">
            <input type="submit" name="runCmd" value="Stop">
          </form>
        </td>
        <td>Stop Minio Daemon</td>
        </tr>
        <tr>
        <td width="30%">
          <form name="minio_restart" method="POST" action="/update.htm" target="progressFrame">
            <input type="hidden" name="cmd" value="/etc/rc.d/rc.minio restart">
            <input type="submit" name="runCmd" value="Restart">
          </form>
        </td>
        <td>Restart Minio Daemon</td>
        </tr>
      <?else:?>
        <tr>
        <td width="30%">
          <form name="minio_start" method="POST" action="/update.htm" target="progressFrame">
            <input type="hidden" name="cmd" value="/etc/rc.d/rc.minio buttonstart">
            <input type="submit" name="runCmd" value="Start">
          </form>
        </td>
        <td>Start Minio Daemon</td>
        </tr>
      <?endif;?>
    </table>
  </div>
  <br></br>

  <br></br>
  <br></br>
</div>

<div style="width: 49%; float:right; border: 0px solid black;">
  <div id="title">
    <span class="left">Configuration:&nbsp;<img src='/plugins/minio/new_config.png'></span>
  </div>
  <form name="minio_settings" id="minio_settings" method="POST" action="/update.htm" target="progressFrame" onsubmit="return validateForm();">
  <!--note to self: the /return/ in the onsubmit event is important as without it, the submit action is still processed-->
    <input type="hidden" name="cmd" value="/etc/rc.d/rc.minio">
    <input type="hidden" name="arg3" id="arg3" maxlength="60" value="wibble">
 
    <table class="settings">
      <tr>
      <td>Enable Minio Service:</td>
      <td>
        <select name="arg1" id="arg1" size="1">
          <?=mk_option($minio_cfg['SERVICE'], "disable", "No");?>
          <?=mk_option($minio_cfg['SERVICE'], "enable", "Yes");?>
        </select>
      </td>
      </tr>
      <tr>
      <td>Minio Port:</td>
      <td>
        <input type="text" name="arg2" id="arg2" maxlength="5" style="width: 20%;height: 100%;" value="<?=$minio_cfg['PORT'];?>">
      </td>
      </tr>
      <tr>
      <td>Available options for Minio Users:</td>
      <td>
        <select name="miniousers" id="miniousers" multiple="multiple" size="4" style="width: 50%;height: 100%;">
          <? foreach ($useropts as $users) { ?>
          <option <? print (in_array($users,$selectedminiousers)) ? "selected" : "" ; ?> value="<?=$users;?>">
          <? print $users; ?>
          </option>
          <? } ?>
        </select>
      </td>
      </tr>
      <tr>
      <td>AccessKey:</td>
      <td>
        <input type="text" name="arg3" id="arg3" maxlength="30" style="width: 20%;height: 100%;" value="<?=$minio_cfg['ACCESSKEY'];?>">
      </td>
      </tr>
      <tr>
      <td>SecretKey:</td>
      <td>
        <input type="text" name="arg4" id="arg4" maxlength="60" style="width: 20%;height: 100%;" value="<?=$minio_cfg['SECRETKEY'];?>">
      </td>
      </tr>
      <tr>
      <td>Command:</td>
      <td>
        <select name="arg5" id="arg5" size="1">
          <?=mk_option($minio_cfg['COMMAND'], "service", "Service");?>
          <?=mk_option($minio_cfg['COMMAND'], "gateway", "Gateway");?>
        </select>
      </td>
      </tr>
      <tr>
    </table>

    <div align="center">
      <hr size="3" align="center" width="75%" color="grey" style="margin-top:20px;margin-bottom:18px">
      <input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button>      
    </div>
  </form>
  <br></br>
  <br></br>
</div>

<script type="text/javascript">
function onLoad() {
  // do nothing
}

function validateForm() {
  // create comma separated list of users.  empty value if no users selected
  var miniouserVal = "";
  var x = 0;
  for (x = 0; x < document.getElementById('miniousers').length; x++) {
    if (document.getElementById('miniousers')[x].selected) {
      miniouserVal = miniouserVal + document.getElementById('miniousers')[x].value + "," ;
      }
    }
  document.getElementById('arg3').value = miniouserVal.replace(/(^\s*,)|(,\s*$)/g, '');  // strip off trailing comma
  if (document.getElementById('arg3').value == "") {
	document.getElementById('arg3').value = "-1"
  }
  
  document.getElementById('arg2').disabled = false;
  document.getElementById('arg3').disabled = false;
  document.getElementById('arg4').disabled = false;
  document.getElementById('arg5').disabled = false;
  document.getElementById('arg6').disabled = false;
  document.getElementById('arg7').disabled = false;
  document.getElementById('arg8').disabled = false;
  return(true);
}

function checkRUNNING(form) {
    // dont disable arg1 which is the service enable/disable. only disable subsequent fields
    // note: "disabled" elements do not get submitted. the below will cause these field values to be empty upon apply. a workaround is to 
    //       implement a validation function which is called upon form submit which amongst other things can re-enable the fields
    if ("<?=$minio_running;?>" == "yes") {
    form.arg2.disabled = true;
    form.arg3.disabled = true;
    form.arg4.disabled = true;
    form.arg5.disabled = true;
    form.arg6.disabled = true;
    form.arg7.disabled = true;
    form.arg8.disabled = true;
  }
}

onLoad();
checkRUNNING(document.minio_settings);
</script>
</body>
</html>
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/&name;/&name;.php">
<INLINE>

</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.&name;" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
# start|stop|restart|enable|disable|buttonstart minio.

minio_start()
{
  # no-op if not enabled
  if [ $SERVICE != "enable" ]; then
    #echo "Service is not enabled!"
    #sleep 1
    return
  fi
   
  # no-op if already running
  if [ -f /var/run/minio.pid ]; then
    #echo "Minio already running"
    #sleep 1
    return
  fi   
   
  echo "Starting Minio..."
  sleep 1

  /usr/sbin/minio
  
  echo "... OK"
  sleep 1
}

minio_stop()
{ 
  # no-op if already running
  if [ ! -f /var/run/minio.pid ]; then
    #echo "Minio already stopped"
    #sleep 1
    return
  fi   

  echo "Stopping Minio..."
  sleep 1
  
  killall minio
  
  echo "... OK"
  sleep 1
}
  
minio_restart() {
  if [ -r /var/run/minio.pid ]; then
    echo "Restarting parent listener process only. To kill every minio process, you must use stop"
    sleep 3
    kill `cat /var/run/minio.pid`
  else
    echo "Warning: there does not appear to be a parent instance of minio running."
    sleep 3
    exit 1
  fi
  sleep 1
  minio_start
}  

minio_buttonstart()
{
  CONFIG="/boot/config/plugins/minio/minio.cfg"
  if [ -f $CONFIG ]; then
    # a less greedy sed.  only replaces the first occurance of disabled with enabled.  ie. will only hit service line which is (usually) always first in cfg
	sed -i "0,/"disable"/s/"disable"/"enable/"" $CONFIG 2>/dev/null
    SERVICE=enable
    
    write_config
    minio_start
    
  fi
}

write_config()
{
  echo "Updating Config..."
  sleep 1
  
  echo "# minio configuration" > /boot/config/plugins/minio/minio.cfg
  echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/minio/minio.cfg
  echo "PORT=\"$PORT\"" >> /boot/config/plugins/minio/minio.cfg
  echo "USERLIST=\"$USERLIST\"" >> /boot/config/plugins/minio/minio.cfg
  echo "ACCESSKEY=\"$ACCESSKEY\"" >> /boot/config/plugins/minio/minio.cfg
  echo "SECRETKEY=\"$SECRETKEY\"" >> /boot/config/plugins/minio/minio.cfg
  echo "COMMAND=\"$COMMAND\"" >> /boot/config/plugins/minio/minio.cfg
  
  # only loop thru userlist if some/one were selected in webgui.  no users selected = -1
  if [[ $USERLIST != "-1" ]]; then
    # Account for fact $USERLIST is one or many comma separated user names
    USERLOOP=${USERLIST},
    while echo $USERLOOP | grep \, &>/dev/null
    do
      USERTEMP=${USERLOOP%%\,*}
      USERLOOP=${USERLOOP#*\,}
      
      #echo "Iterating through user: $USERTEMP"
      
      # Create home directory + .minio subdirectoy and assign same + shell to user
      if [ ! -d /home/$USERTEMP ]; then
        #echo "Creating home dir: {/home/$USERTEMP} for $USERTEMP..."
        mkdir -p /home/$USERTEMP/.minio
      fi
      chown -R $USERTEMP:users /home/$USERTEMP
      chmod -R 0755 /home/$USERTEMP
      
      #echo "Assigning shell {/bin/bash} & home dir: {/home/$USERTEMP} to user $USERTEMP..."
      usermod -d /home/$USERTEMP -s /bin/bash $USERTEMP 2>/dev/null

      # Check for existance of "authorised_keys" file at /boot/config/plugin/minio/{someuser}.  Copy to /home/{someuser} if found.  Enables
      # user to authenticate with private / public key pair.
      # NB: if file is not found, an empty directory path will be created on the flash drive, thus making it slightly easier for unraid user 
      # to see what/where to maintain key files
      # ** IT IS CURRENTLY THE USERS RESPONSIBILITY TO PRE-GENERATE A PUBLIC/PRIVATE KEYPAIR **
      if [ -f /boot/config/plugins/minio/$USERTEMP/.minio/authorized_keys ]; then
        cp --preserve=timestamps -p /boot/config/plugins/minio/$USERTEMP/.minio/authorized_keys /home/$USERTEMP/.minio/authorized_keys
        chmod 700 /home/$USERTEMP/.minio
        chmod 600 /home/$USERTEMP/.minio/authorized_keys
        chown $USERTEMP:users /home/$USERTEMP/.minio/authorized_keys
      else
        mkdir -p /boot/config/plugins/minio/$USERTEMP/.minio 2>/dev/null
        # put a lil help file in each user dir, saying what to do
        cp /boot/config/plugins/minio/read_me.txt /boot/config/plugins/minio/$USERTEMP/.minio/read_me.txt 2>/dev/null
      fi
    done
  fi 
   
  # the host keys get created during plugin install script and if not present are generated
  # using minio-keygen and copied to flash to persist reboot.  we already know they're present
  # at /boot/config/plugins/minio so just copy them over to /etc/minio and set correct perms
  # this is a global setting, not user specific, so do it regardless if miniouser empty or not
  # this way it will allow root to login via minio as long as PermitRootLogin=yes and either
  # root has been assigned a password or if no password then AllowEmptyPaswords must = yes
  #cp --preserve=timestamps -p /boot/config/plugins/minio/minio_host_*key* /etc/minio
  #chmod 600 /etc/minio/minio_host_*key
  #chmod 644 /etc/minio/minio*.pub

  # do the same for minio_config and minio_config.  allows users to manually edit minio_config on the flash drive in case additional config needed.
  #cp --preserve=timestamps -p -f /boot/config/plugins/minio/minio_config /etc/minio/minio_config
  #cp --preserve=timestamps -p -f /boot/config/plugins/minio/minio_config /etc/minio/minio_config
  
  # update minio_config file with values set in webgui
  sed -i 's/.*Port .*/Port '$PORT'/' /etc/minio/minio_config
  sed -i 's/.*AccessKey.*/AccessKey '$ACCESSKEY'/' /etc/minio/minio_config
  sed -i 's/.*SecretKey.*/SecretKey '$SECRETKEY'/' /etc/minio/minio_config
  sed -i 's/.*Command.*/Command '$COMMAND'/' /etc/minio/minio_config

  echo "... OK"
  sleep 1
}

minio_enable()
{
  echo "Applying Settings ($1) ..."
  sleep 1
  
  SERVICE="$1" #enable
  PORT="$2"
  USERLIST="$3"
  ACCESSKEY="$4"
  SECRETKEY="$5"
  COMMAND="$6"
  
  write_config
  minio_start
   
  echo "... OK"
  sleep 1
}

minio_disable()
{
  echo "Applying Settings ($1) ..."
  sleep 1
  
  SERVICE="$1" #disable
  PORT="$2"
  USERLIST="$3"
  ACCESSKEY="$4"
  SECRETKEY="$5"
  COMMAND="$6"
  
  write_config
  minio_stop
  
  echo "... OK"
  sleep 1
}


# read our configuration
source /boot/config/plugins/minio/minio.cfg

case "$1" in
  'start')
    minio_start
  ;;
  'stop')
    minio_stop
  ;;
  'restart')
    minio_restart
  ;;
  'enable')
    minio_enable $1 $2 $3 $4 $5 $6
  ;;
  'disable')
    minio_disable $1 $2 $3 $4 $5 $6
  ;;
  'buttonstart')
    minio_buttonstart
  ;;
  *)
    echo "usage $0 start|stop|restart|enable|disable|buttonstart"
esac
]]>
</INLINE>
</FILE>

</PLUGIN>
